app {
  // В секундах
  SessionMaxInactiveInterval = 60
  
  isomorphicDir = "isomorphic"
  schemasDir = "/system/schema"

  modulesDir = "/client/modules"
  mainServletPath = "/logic/*"

  //modulesDir = "/system/modules"
  //modulesDir = "/system/modules-debug"
  //skin = "Enterprise"

  classPath4ServletDebug {
    webInfPass = "web-ui/target/webapp/WEB-INF"
  }

  classPath4Servlet = [
    "$web-inf/classes",
    "$web-inf/lib/common-webapp???version???.jar",
    "$web-inf/lib/web-ui.jar"
  ]
}

LogActor {
  LogHtmlAndJS = info
  LogHtml = info
  LogJavaScript = info
}

akka {
  loggers = ["com.simplesys.messages.event.Slf4jLogger"]
  //loggers = ["akka.event.slf4j.Slf4jLogger"]
  //extensions = ["kamon.statsd.StatsD"]
  //loglevel = error
  loglevel = debug
  stdout-loglevel = error
  ask-timeout = 240
  //ask-timeout = 10


  actor {
    debug {
      receive = off
      autoreceive = off
      lifecycle = off
      fsm = off
      unhandled = on
    }
  }

  http {
    log-http-config-on-init = off
    system-name = com-simplesys-http
    timeout = 0
  }
}

messaging {

  # how often do we send keepalives to the client (ms)
  #deprecated
  keepaliveInterval = 3000

  #deprecated
  clientReconnectWindow = 10000

  # how long the client waits after the keepaliveInterval before re-establishing
  # the connection (ms)
  #deprecated
  keepaliveReestablishDelay = 1000

  # how long the client waits for the connect handshake to complete before
  # retrying
  connectTimeout = 500

  # connection time to live - the maximum amount of time a persistent connection
  # is allowed to stay open before being re-established (ms)
  connectionTTL = 60000

  # total response size to pad out to in order to defeat intervening
  # bufferring by proxies (bytes)
  #deprecated
  flushBufferSize = 8096
}

//bounded-mailbox {
//  mailbox-type = "akka.dispatch.BoundedDequeBasedMailbox"
//  mailbox-capacity = 10
//  mailbox-push-timeout-time = -1 //10s
//}


topology {
  node-id = 1
  seq-cash = 20
}

test {
  InMainMenuPanelVisible = true
  UserDI = 15.1
}

config {
  tailToEndRow = 1
  dataPageSize = 100
  drawAheadRatio = 1.6
  defaultTimeout = 15000
  longTimeout = 240000
  maxErrorMessageLength = 10000
  timeoutErrorMessage = "Время ожидания выполнения операции истекло."
}

dbPool {
  //default = "db-connection-stack.prod"
  //default = "db-connection-stack.prod212"
  //default = "db-connection-stack.docker"
  default = "db-connection-stack.docker212"
}

db-connection-stack {
   docker {
     oraclcePoolDataSource {
       className = "oracle.jdbc.pool.OracleDataSource"
       url = "jdbc:oracle:thin:@//192.168.2.84:1521/orcl"
       user = "B404SP3DEMO"
       password = "dfqc2"
       initialSize = 5
       fetchSize = 1000
       timeZone = "Europe/Moscow"
     }
   }
   docker212 {
    oraclcePoolDataSource {
      className = "oracle.jdbc.pool.OracleDataSource"
      url = "jdbc:oracle:thin:@//192.168.2.84:1521/test_pdb"
      user = "B404SP3DEMO"
      password = "dfqc2"
      initialSize = 5
      fetchSize = 1000
      timeZone = "Europe/Moscow"
    }
  }
   prod {
    oraclcePoolDataSource {
      className = "oracle.jdbc.pool.OracleDataSource"
      //url = "jdbc:oracle:thin:@//orapg.simplesys.lan:1521/test"
      url = "jdbc:oracle:thin:@//192.168.115.200:1521/test"
      user = "B404SP3DEMO"
      password = "b404sp3demo"
      initialSize = 5
      fetchSize = 1000
      timeZone = "Europe/Moscow"
    }
  }
  prod212 {
     oraclcePoolDataSource {
        className = "oracle.jdbc.pool.OracleDataSource"
        //url = "jdbc:oracle:thin:@//tank.ssys.lan:1521/test"
        url = "jdbc:oracle:thin:@//192.168.115.202:1521/test"
        user = "B404SP3DEMO"
        password = "dfqc2"
        initialSize = 5
        fetchSize = 1000
        timeZone = "Europe/Moscow"
      }
    }
}

